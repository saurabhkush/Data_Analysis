91. run of importance source...
92. run of importance source...
93. run of importance source...
94. run of importance source...
95. run of importance source...
96. run of importance source...
97. run of importance source...
98. run of importance source...
99. run of importance source...
> print(boruta.train)
Boruta performed 99 iterations in 12.67529 mins.
48 attributes confirmed important: BedroomAbvGr, BldgType, BsmtExposure, BsmtFinSF1,
BsmtFinType1 and 43 more.
20 attributes confirmed unimportant: BsmtCond, BsmtFinSF2, BsmtFinType2, BsmtHalfBath,
Condition2 and 15 more.
11 tentative attributes left: Alley, Condition1, EnclosedPorch, Fence, Functional and 6 more.
> plot(boruta.train)
> final.boruta <- TentativeRoughFix(boruta.train)
> print(final.boruta)
Boruta performed 99 iterations in 12.67529 mins.
Tentatives roughfixed over the last 99 iterations.
53 attributes confirmed important: Alley, BedroomAbvGr, BldgType, BsmtExposure,
BsmtFinSF1 and 48 more.
26 attributes confirmed unimportant: BsmtCond, BsmtFinSF2, BsmtFinType2,
BsmtHalfBath, Condition1 and 21 more.
> getSelectedAttributes(final.boruta, withTentative = FALSE)
[1] "MSSubClass"    "MSZoning"      "LotFrontage"   "LotArea"       "Alley"
[6] "LandContour"   "Neighborhood"  "BldgType"      "HouseStyle"    "OverallQual"
[11] "OverallCond"   "YearBuilt"     "YearRemodAdd"  "Exterior1st"   "Exterior2nd"
[16] "MasVnrArea"    "ExterQual"     "Foundation"    "BsmtQual"      "BsmtExposure"
[21] "BsmtFinType1"  "BsmtFinSF1"    "BsmtUnfSF"     "TotalBsmtSF"   "HeatingQC"
[26] "CentralAir"    "Electrical"    "X1stFlrSF"     "X2ndFlrSF"     "GrLivArea"
[31] "BsmtFullBath"  "FullBath"      "HalfBath"      "BedroomAbvGr"  "KitchenAbvGr"
[36] "KitchenQual"   "TotRmsAbvGrd"  "Functional"    "Fireplaces"    "FireplaceQu"
[41] "GarageType"    "GarageYrBlt"   "GarageFinish"  "GarageCars"    "GarageArea"
[46] "GarageQual"    "GarageCond"    "PavedDrive"    "WoodDeckSF"    "OpenPorchSF"
[51] "EnclosedPorch" "ScreenPorch"   "SaleCondition"
> boruta.df <- attStats(final.boruta)
> View(boruta.df)
> selecteAtrr <- getSelectedAttributes(final.boruta, withTentative = FALSE)
> test_data2 <- NULL
> train_data2 <- NULL
> rm(test_data2)
> rm(i)
> for (a in 1:length(selecteAtrr)){
+   train_data2 <- cbind(train_data[,selecteAtrr[a]])
+     }
> for (a in 1:53){
+   train_data2 <- cbind(train_data[,selecteAtrr[a]])
+     }
> selecteAtrr
[1] "MSSubClass"    "MSZoning"      "LotFrontage"   "LotArea"       "Alley"
[6] "LandContour"   "Neighborhood"  "BldgType"      "HouseStyle"    "OverallQual"
[11] "OverallCond"   "YearBuilt"     "YearRemodAdd"  "Exterior1st"   "Exterior2nd"
[16] "MasVnrArea"    "ExterQual"     "Foundation"    "BsmtQual"      "BsmtExposure"
[21] "BsmtFinType1"  "BsmtFinSF1"    "BsmtUnfSF"     "TotalBsmtSF"   "HeatingQC"
[26] "CentralAir"    "Electrical"    "X1stFlrSF"     "X2ndFlrSF"     "GrLivArea"
[31] "BsmtFullBath"  "FullBath"      "HalfBath"      "BedroomAbvGr"  "KitchenAbvGr"
[36] "KitchenQual"   "TotRmsAbvGrd"  "Functional"    "Fireplaces"    "FireplaceQu"
[41] "GarageType"    "GarageYrBlt"   "GarageFinish"  "GarageCars"    "GarageArea"
[46] "GarageQual"    "GarageCond"    "PavedDrive"    "WoodDeckSF"    "OpenPorchSF"
[51] "EnclosedPorch" "ScreenPorch"   "SaleCondition"
> for (a in 1:53){
+   train_data2 <- cbind(train_data[[,selecteAtrr[a]]])
+     }
Error in `[[.data.frame`(train_data, , selecteAtrr[a]) :
argument "..1" is missing, with no default
> train_data2 <- subset(train_data, selecteAtrr)
Error in subset.data.frame(train_data, selecteAtrr) :
'subset' must be logical
> train_data2 <- subset(train_data, select= selecteAtrr)
> str(train_data2)
'data.frame':	1460 obs. of  53 variables:
$ MSSubClass   : Factor w/ 15 levels "20","30","40",..: 6 1 6 7 6 5 1 6 5 15 ...
$ MSZoning     : chr  "RL" "RL" "RL" "RL" ...
$ LotFrontage  : num  65 80 68 60 84 ...
$ LotArea      : int  8450 9600 11250 9550 14260 14115 10084 10382 6120 7420 ...
$ Alley        : Factor w/ 3 levels "Grvl","NoAC",..: 2 2 2 2 2 2 2 2 2 2 ...
$ LandContour  : Factor w/ 4 levels "Bnk","HLS","Low",..: 4 4 4 4 4 4 4 4 4 4 ...
$ Neighborhood : Factor w/ 25 levels "Blmngtn","Blueste",..: 6 25 6 7 14 12 21 17 18 4 ...
$ BldgType     : Factor w/ 5 levels "1Fam","2fmCon",..: 1 1 1 1 1 1 1 1 1 2 ...
$ HouseStyle   : Factor w/ 8 levels "1.5Fin","1.5Unf",..: 6 3 6 6 6 1 3 6 1 2 ...
$ OverallQual  : Factor w/ 10 levels "1","2","3","4",..: 7 6 7 7 8 5 8 7 7 5 ...
$ OverallCond  : Factor w/ 9 levels "1","2","3","4",..: 5 8 5 5 5 5 5 6 5 6 ...
$ YearBuilt    : int  2003 1976 2001 1915 2000 1993 2004 1973 1931 1939 ...
$ YearRemodAdd : int  2003 1976 2002 1970 2000 1995 2005 1973 1950 1950 ...
$ Exterior1st  : Factor w/ 15 levels "AsbShng","AsphShn",..: 13 9 13 14 13 13 13 7 4 9 ...
$ Exterior2nd  : Factor w/ 16 levels "AsbShng","AsphShn",..: 14 9 14 16 14 14 14 7 16 9 ...
$ MasVnrArea   : num  196 0 162 0 350 0 186 240 0 0 ...
$ ExterQual    : Factor w/ 4 levels "Ex","Fa","Gd",..: 3 4 3 4 3 4 3 4 4 4 ...
$ Foundation   : Factor w/ 6 levels "BrkTil","CBlock",..: 3 2 3 1 3 6 3 2 1 1 ...
$ BsmtQual     : Factor w/ 5 levels "Ex","Fa","Gd",..: 3 3 3 5 3 3 1 3 5 5 ...
$ BsmtExposure : Factor w/ 5 levels "Av","Gd","Mn",..: 4 2 3 4 1 4 1 3 4 4 ...
$ BsmtFinType1 : Factor w/ 7 levels "ALQ","BLQ","GLQ",..: 3 1 3 1 3 3 3 1 7 3 ...
$ BsmtFinSF1   : int  706 978 486 216 655 732 1369 859 0 851 ...
$ BsmtUnfSF    : int  150 284 434 540 490 64 317 216 952 140 ...
$ TotalBsmtSF  : int  856 1262 920 756 1145 796 1686 1107 952 991 ...
$ HeatingQC    : chr  "Ex" "Ex" "Ex" "Gd" ...
$ CentralAir   : chr  "Y" "Y" "Y" "Y" ...
$ Electrical   : chr  "SBrkr" "SBrkr" "SBrkr" "SBrkr" ...
$ X1stFlrSF    : int  856 1262 920 961 1145 796 1694 1107 1022 1077 ...
$ X2ndFlrSF    : int  854 0 866 756 1053 566 0 983 752 0 ...
$ GrLivArea    : int  1710 1262 1786 1717 2198 1362 1694 2090 1774 1077 ...
$ BsmtFullBath : int  1 0 1 1 1 1 1 1 0 1 ...
$ FullBath     : int  2 2 2 1 2 1 2 2 2 1 ...
$ HalfBath     : int  1 0 1 0 1 1 0 1 0 0 ...
$ BedroomAbvGr : int  3 3 3 3 4 1 3 3 2 2 ...
$ KitchenAbvGr : int  1 1 1 1 1 1 1 1 2 2 ...
$ KitchenQual  : Factor w/ 4 levels "Ex","Fa","Gd",..: 3 4 3 3 3 4 3 4 4 4 ...
$ TotRmsAbvGrd : int  8 6 6 7 9 5 7 7 8 5 ...
$ Functional   : Factor w/ 7 levels "Maj1","Maj2",..: 7 7 7 7 7 7 7 7 3 7 ...
$ Fireplaces   : int  0 1 1 1 1 0 1 2 2 2 ...
$ FireplaceQu  : Factor w/ 6 levels "Ex","Fa","Gd",..: 4 6 6 3 6 4 3 6 6 6 ...
$ GarageType   : Factor w/ 7 levels "2Types","Attchd",..: 2 2 2 6 2 2 2 2 6 2 ...
$ GarageYrBlt  : num  2003 1976 2001 1998 2000 ...
$ GarageFinish : Factor w/ 4 levels "Fin","NoG","RFn",..: 3 3 3 4 3 4 3 3 4 3 ...
$ GarageCars   : int  2 2 2 3 3 2 2 2 2 1 ...
$ GarageArea   : int  548 460 608 642 836 480 636 484 468 205 ...
$ GarageQual   : Factor w/ 6 levels "Ex","Fa","Gd",..: 6 6 6 6 6 6 6 6 2 3 ...
$ GarageCond   : Factor w/ 6 levels "Ex","Fa","Gd",..: 6 6 6 6 6 6 6 6 6 6 ...
$ PavedDrive   : Factor w/ 3 levels "N","P","Y": 3 3 3 3 3 3 3 3 3 3 ...
$ WoodDeckSF   : int  0 298 0 0 192 40 255 235 90 0 ...
$ OpenPorchSF  : int  61 0 42 35 84 30 57 204 0 4 ...
$ EnclosedPorch: int  0 0 0 272 0 0 0 228 205 0 ...
$ ScreenPorch  : int  0 0 0 0 0 0 0 0 0 0 ...
$ SaleCondition: Factor w/ 6 levels "Abnorml","AdjLand",..: 5 5 5 1 5 5 5 5 1 5 ...
> train_data2$MSZoning <- as.factor(train_data2$MSZoning)
> train_data2$LotFrontage <- as.integer(train_data2$LotFrontage)
> train_data2$GarageYrBlt <- as.integer(train_data2$GarageYrBlt)
> train_data2$HeatingQC <- as.factor(train_data2$HeatingQC)
> train_data2$CentralAir <- as.factor(train_data2$CentralAir)
> train_data2$Electrical <- as.factor(train_data2$Electrical)
> train_data2$MasVnrArea <- as.integer(train_data2$MasVnrArea)
> str(train_data2)
'data.frame':	1460 obs. of  53 variables:
$ MSSubClass   : Factor w/ 15 levels "20","30","40",..: 6 1 6 7 6 5 1 6 5 15 ...
$ MSZoning     : Factor w/ 5 levels "C (all)","FV",..: 4 4 4 4 4 4 4 4 5 4 ...
$ LotFrontage  : int  65 80 68 60 84 85 75 70 51 50 ...
$ LotArea      : int  8450 9600 11250 9550 14260 14115 10084 10382 6120 7420 ...
$ Alley        : Factor w/ 3 levels "Grvl","NoAC",..: 2 2 2 2 2 2 2 2 2 2 ...
$ LandContour  : Factor w/ 4 levels "Bnk","HLS","Low",..: 4 4 4 4 4 4 4 4 4 4 ...
$ Neighborhood : Factor w/ 25 levels "Blmngtn","Blueste",..: 6 25 6 7 14 12 21 17 18 4 ...
$ BldgType     : Factor w/ 5 levels "1Fam","2fmCon",..: 1 1 1 1 1 1 1 1 1 2 ...
$ HouseStyle   : Factor w/ 8 levels "1.5Fin","1.5Unf",..: 6 3 6 6 6 1 3 6 1 2 ...
$ OverallQual  : Factor w/ 10 levels "1","2","3","4",..: 7 6 7 7 8 5 8 7 7 5 ...
$ OverallCond  : Factor w/ 9 levels "1","2","3","4",..: 5 8 5 5 5 5 5 6 5 6 ...
$ YearBuilt    : int  2003 1976 2001 1915 2000 1993 2004 1973 1931 1939 ...
$ YearRemodAdd : int  2003 1976 2002 1970 2000 1995 2005 1973 1950 1950 ...
$ Exterior1st  : Factor w/ 15 levels "AsbShng","AsphShn",..: 13 9 13 14 13 13 13 7 4 9 ...
$ Exterior2nd  : Factor w/ 16 levels "AsbShng","AsphShn",..: 14 9 14 16 14 14 14 7 16 9 ...
$ MasVnrArea   : int  196 0 162 0 350 0 186 240 0 0 ...
$ ExterQual    : Factor w/ 4 levels "Ex","Fa","Gd",..: 3 4 3 4 3 4 3 4 4 4 ...
$ Foundation   : Factor w/ 6 levels "BrkTil","CBlock",..: 3 2 3 1 3 6 3 2 1 1 ...
$ BsmtQual     : Factor w/ 5 levels "Ex","Fa","Gd",..: 3 3 3 5 3 3 1 3 5 5 ...
$ BsmtExposure : Factor w/ 5 levels "Av","Gd","Mn",..: 4 2 3 4 1 4 1 3 4 4 ...
$ BsmtFinType1 : Factor w/ 7 levels "ALQ","BLQ","GLQ",..: 3 1 3 1 3 3 3 1 7 3 ...
$ BsmtFinSF1   : int  706 978 486 216 655 732 1369 859 0 851 ...
$ BsmtUnfSF    : int  150 284 434 540 490 64 317 216 952 140 ...
$ TotalBsmtSF  : int  856 1262 920 756 1145 796 1686 1107 952 991 ...
$ HeatingQC    : Factor w/ 5 levels "Ex","Fa","Gd",..: 1 1 1 3 1 1 1 1 3 1 ...
$ CentralAir   : Factor w/ 2 levels "N","Y": 2 2 2 2 2 2 2 2 2 2 ...
$ Electrical   : Factor w/ 5 levels "FuseA","FuseF",..: 5 5 5 5 5 5 5 5 2 5 ...
$ X1stFlrSF    : int  856 1262 920 961 1145 796 1694 1107 1022 1077 ...
$ X2ndFlrSF    : int  854 0 866 756 1053 566 0 983 752 0 ...
$ GrLivArea    : int  1710 1262 1786 1717 2198 1362 1694 2090 1774 1077 ...
$ BsmtFullBath : int  1 0 1 1 1 1 1 1 0 1 ...
$ FullBath     : int  2 2 2 1 2 1 2 2 2 1 ...
$ HalfBath     : int  1 0 1 0 1 1 0 1 0 0 ...
$ BedroomAbvGr : int  3 3 3 3 4 1 3 3 2 2 ...
$ KitchenAbvGr : int  1 1 1 1 1 1 1 1 2 2 ...
$ KitchenQual  : Factor w/ 4 levels "Ex","Fa","Gd",..: 3 4 3 3 3 4 3 4 4 4 ...
$ TotRmsAbvGrd : int  8 6 6 7 9 5 7 7 8 5 ...
$ Functional   : Factor w/ 7 levels "Maj1","Maj2",..: 7 7 7 7 7 7 7 7 3 7 ...
$ Fireplaces   : int  0 1 1 1 1 0 1 2 2 2 ...
$ FireplaceQu  : Factor w/ 6 levels "Ex","Fa","Gd",..: 4 6 6 3 6 4 3 6 6 6 ...
$ GarageType   : Factor w/ 7 levels "2Types","Attchd",..: 2 2 2 6 2 2 2 2 6 2 ...
$ GarageYrBlt  : int  2003 1976 2001 1998 2000 1993 2004 1973 1931 1939 ...
$ GarageFinish : Factor w/ 4 levels "Fin","NoG","RFn",..: 3 3 3 4 3 4 3 3 4 3 ...
$ GarageCars   : int  2 2 2 3 3 2 2 2 2 1 ...
$ GarageArea   : int  548 460 608 642 836 480 636 484 468 205 ...
$ GarageQual   : Factor w/ 6 levels "Ex","Fa","Gd",..: 6 6 6 6 6 6 6 6 2 3 ...
$ GarageCond   : Factor w/ 6 levels "Ex","Fa","Gd",..: 6 6 6 6 6 6 6 6 6 6 ...
$ PavedDrive   : Factor w/ 3 levels "N","P","Y": 3 3 3 3 3 3 3 3 3 3 ...
$ WoodDeckSF   : int  0 298 0 0 192 40 255 235 90 0 ...
$ OpenPorchSF  : int  61 0 42 35 84 30 57 204 0 4 ...
$ EnclosedPorch: int  0 0 0 272 0 0 0 228 205 0 ...
$ ScreenPorch  : int  0 0 0 0 0 0 0 0 0 0 ...
$ SaleCondition: Factor w/ 6 levels "Abnorml","AdjLand",..: 5 5 5 1 5 5 5 5 1 5 ...
> hist(train_data$LotFrontage) # ~normal distribn with few outliers
> boxplot(train_data$LotFrontage)
> hist(train_data$LotArea) #right skewed
> Area <- train_data2$LotArea
> Area <- log(Area)
> hist(Area)
> train_data2$LotArea <- log(train_data2$LotArea)
> hist(train_data2$LotArea) #right skewed, taking log helps
> boxplot(train_data2$LotArea) #Outlier
> hist(train_data2$YearBuilt)
> hist(train_data2$YearRemodAdd)
> str(train_data2)
'data.frame':	1460 obs. of  53 variables:
$ MSSubClass   : Factor w/ 15 levels "20","30","40",..: 6 1 6 7 6 5 1 6 5 15 ...
$ MSZoning     : Factor w/ 5 levels "C (all)","FV",..: 4 4 4 4 4 4 4 4 5 4 ...
$ LotFrontage  : int  65 80 68 60 84 85 75 70 51 50 ...
$ LotArea      : num  9.04 9.17 9.33 9.16 9.57 ...
$ Alley        : Factor w/ 3 levels "Grvl","NoAC",..: 2 2 2 2 2 2 2 2 2 2 ...
$ LandContour  : Factor w/ 4 levels "Bnk","HLS","Low",..: 4 4 4 4 4 4 4 4 4 4 ...
$ Neighborhood : Factor w/ 25 levels "Blmngtn","Blueste",..: 6 25 6 7 14 12 21 17 18 4 ...
$ BldgType     : Factor w/ 5 levels "1Fam","2fmCon",..: 1 1 1 1 1 1 1 1 1 2 ...
$ HouseStyle   : Factor w/ 8 levels "1.5Fin","1.5Unf",..: 6 3 6 6 6 1 3 6 1 2 ...
$ OverallQual  : Factor w/ 10 levels "1","2","3","4",..: 7 6 7 7 8 5 8 7 7 5 ...
$ OverallCond  : Factor w/ 9 levels "1","2","3","4",..: 5 8 5 5 5 5 5 6 5 6 ...
$ YearBuilt    : int  2003 1976 2001 1915 2000 1993 2004 1973 1931 1939 ...
$ YearRemodAdd : int  2003 1976 2002 1970 2000 1995 2005 1973 1950 1950 ...
$ Exterior1st  : Factor w/ 15 levels "AsbShng","AsphShn",..: 13 9 13 14 13 13 13 7 4 9 ...
$ Exterior2nd  : Factor w/ 16 levels "AsbShng","AsphShn",..: 14 9 14 16 14 14 14 7 16 9 ...
$ MasVnrArea   : int  196 0 162 0 350 0 186 240 0 0 ...
$ ExterQual    : Factor w/ 4 levels "Ex","Fa","Gd",..: 3 4 3 4 3 4 3 4 4 4 ...
$ Foundation   : Factor w/ 6 levels "BrkTil","CBlock",..: 3 2 3 1 3 6 3 2 1 1 ...
$ BsmtQual     : Factor w/ 5 levels "Ex","Fa","Gd",..: 3 3 3 5 3 3 1 3 5 5 ...
$ BsmtExposure : Factor w/ 5 levels "Av","Gd","Mn",..: 4 2 3 4 1 4 1 3 4 4 ...
$ BsmtFinType1 : Factor w/ 7 levels "ALQ","BLQ","GLQ",..: 3 1 3 1 3 3 3 1 7 3 ...
$ BsmtFinSF1   : int  706 978 486 216 655 732 1369 859 0 851 ...
$ BsmtUnfSF    : int  150 284 434 540 490 64 317 216 952 140 ...
$ TotalBsmtSF  : int  856 1262 920 756 1145 796 1686 1107 952 991 ...
$ HeatingQC    : Factor w/ 5 levels "Ex","Fa","Gd",..: 1 1 1 3 1 1 1 1 3 1 ...
$ CentralAir   : Factor w/ 2 levels "N","Y": 2 2 2 2 2 2 2 2 2 2 ...
$ Electrical   : Factor w/ 5 levels "FuseA","FuseF",..: 5 5 5 5 5 5 5 5 2 5 ...
$ X1stFlrSF    : int  856 1262 920 961 1145 796 1694 1107 1022 1077 ...
$ X2ndFlrSF    : int  854 0 866 756 1053 566 0 983 752 0 ...
$ GrLivArea    : int  1710 1262 1786 1717 2198 1362 1694 2090 1774 1077 ...
$ BsmtFullBath : int  1 0 1 1 1 1 1 1 0 1 ...
$ FullBath     : int  2 2 2 1 2 1 2 2 2 1 ...
$ HalfBath     : int  1 0 1 0 1 1 0 1 0 0 ...
$ BedroomAbvGr : int  3 3 3 3 4 1 3 3 2 2 ...
$ KitchenAbvGr : int  1 1 1 1 1 1 1 1 2 2 ...
$ KitchenQual  : Factor w/ 4 levels "Ex","Fa","Gd",..: 3 4 3 3 3 4 3 4 4 4 ...
$ TotRmsAbvGrd : int  8 6 6 7 9 5 7 7 8 5 ...
$ Functional   : Factor w/ 7 levels "Maj1","Maj2",..: 7 7 7 7 7 7 7 7 3 7 ...
$ Fireplaces   : int  0 1 1 1 1 0 1 2 2 2 ...
$ FireplaceQu  : Factor w/ 6 levels "Ex","Fa","Gd",..: 4 6 6 3 6 4 3 6 6 6 ...
$ GarageType   : Factor w/ 7 levels "2Types","Attchd",..: 2 2 2 6 2 2 2 2 6 2 ...
$ GarageYrBlt  : int  2003 1976 2001 1998 2000 1993 2004 1973 1931 1939 ...
$ GarageFinish : Factor w/ 4 levels "Fin","NoG","RFn",..: 3 3 3 4 3 4 3 3 4 3 ...
$ GarageCars   : int  2 2 2 3 3 2 2 2 2 1 ...
$ GarageArea   : int  548 460 608 642 836 480 636 484 468 205 ...
$ GarageQual   : Factor w/ 6 levels "Ex","Fa","Gd",..: 6 6 6 6 6 6 6 6 2 3 ...
$ GarageCond   : Factor w/ 6 levels "Ex","Fa","Gd",..: 6 6 6 6 6 6 6 6 6 6 ...
$ PavedDrive   : Factor w/ 3 levels "N","P","Y": 3 3 3 3 3 3 3 3 3 3 ...
$ WoodDeckSF   : int  0 298 0 0 192 40 255 235 90 0 ...
$ OpenPorchSF  : int  61 0 42 35 84 30 57 204 0 4 ...
$ EnclosedPorch: int  0 0 0 272 0 0 0 228 205 0 ...
$ ScreenPorch  : int  0 0 0 0 0 0 0 0 0 0 ...
$ SaleCondition: Factor w/ 6 levels "Abnorml","AdjLand",..: 5 5 5 1 5 5 5 5 1 5 ...
> hist(train_data2$MasVnrArea)
> Area <- train_data2$MasVnrArea
> Area <- log(MasVnrArea)
Error: object 'MasVnrArea' not found
> Area <- log(Area)
> hist(Area)
> train_data2$MasVnrArea <- log(train_data2$MasVnrArea)
> boxplot(train_data2$MasVnrArea)
> hist(train_data2$MasVnrArea)#right skewed, log transformation helps
> hist(train_data2$BsmtUnfSF)
> train_data2$BsmtUnfSF <- log(train_data2$BsmtUnfSF)
> hist(train_data2$BsmtUnfSF) #right skewed
> train_data2$BsmtUnfSF <- train_data$BsmtUnfSF
> train_data2$BsmtUnfSF <- (train_data2$BsmtUnfSF)^(1/3)
> hist(train_data2$BsmtUnfSF)
> hist(train_data2$BsmtFinSF1)
> train_data2$BsmtFinSF1 <- log(train_data2$BsmtFinSF1)
> hist(train_data2$BsmtFinSF1)
> train_data2$BsmtFinSF1 <- (train_data2$BsmtFinSF1)^(1/3)
> hist(train_data2$BsmtFinSF1)
> train_data2$BsmtFinSF1 <- train_data$BsmtFinSF1
> train_data2$BsmtFinSF1 <- log(train_data2$BsmtFinSF1)
> hist(train_data2$BsmtFinSF1)
> hist(train_data2$BsmtFinType1)
Error in hist.default(train_data2$BsmtFinType1) : 'x' must be numeric
> hist(train_data2$TotalBsmtSF)
> hist(train_data2$X1stFlrSF)
> hist(train_data2$X2ndFlrSF)
> train_data2$X2ndFlrSF <- log(train_data2$X2ndFlrSF)
> hist(train_data2$X2ndFlrSF) #right skew
> train_data2$X2ndFlrSF <- as.integer(log(train_data2$X2ndFlrSF))#normal now with few outliers
Warning message:
In log(train_data2$X2ndFlrSF) : NaNs produced
> train_data2$X2ndFlrSF <- log(train_data2$X2ndFlrSF)#normal now with few outliers
> hist(train_data2$X2ndFlrSF) #right skew
> train_data2$X2ndFlrSF <- train_data$X2ndFlrSF #normal now with few outliers
> train_data2$X2ndFlrSF <- log(train_data2$X2ndFlrSF) #normal now with few outliers
> train_data2$X2ndFlrSF <- abs(log(train_data2$X2ndFlrSF)) #normal now with few outliers
Warning message:
In log(train_data2$X2ndFlrSF) : NaNs produced
> train_data2$X2ndFlrSF <- train_data$X2ndFlrSF #normal now with few outliers
> train_data2$X2ndFlrSF <- log(train_data2$X2ndFlrSF) #normal now with few outliers
> hist(train_data2$X2ndFlrSF) #right skew
> hist(train_data2$GrLivArea)
> hist(train_data2$BsmtFullBath)
> hist(train_data2$GarageArea)
> hist(train_data2$WoodDeckSF)
> train_data2$WoodDeckSF <- log(train_data2$WoodDeckSF)
> hist(train_data2$WoodDeckSF) #right skew
> hist(train_data2$OpenPorchSF)
> train_data2$OpenPorchSF <- log(train_data2$OpenPorchSF)
> hist(train_data2$OpenPorchSF)
> View(train_data2)
> test <- train_data2$LotFrontage
> test[test>130] <- meant(test[-test>130])
Error: could not find function "meant"
> test[test>130] <- mean(test[-test>130])
> hist(test)
> train_data2$LotFrontage[train_data2$LotFrontage>130] <- mean(train_data2$LotFrontage[-train_data2$LotFrontage>130])
> hist(train_data2$LotArea)
> train_data2$LotArea[train_data2$LotArea>10.5] <- mean(train_data2$LotArea[-train_data2$LotArea > 10.5])
> boxplot(train_data2$LotArea) #  Few Outlier
> hist(train_data2$LotArea) #right skewed, taking log helps
> test_data2 <- subset(test_data, select= selecteAtrr)
> View(test_data2)
> test_data2$LotArea <- log(test_data2$LotArea)
> test_data2$MasVnrArea <- log(test_data2$LotArea)
> test_data2$BsmtUnfSF <- (test_data2$BsmtUnfSF)^(1/3)
> test_data2$X2ndFlrSF <- log(test_data2$X2ndFlrSF)
> test_data2$WoodDeckSF <- log(test_data2$WoodDeckSF)
> test_data2$OpenPorchSF <- log(test_data2$OpenPorchSF)
> hist(test_data2$LotFrontage)
> test_data2$LotFrontage[test_data2$LotFrontage>130] <- mean(test_data2$LotFrontage[-test_data2$LotFrontage>130])
> View(test_data2)
> test_data$LotFrontage[is.na(test_data$LotFrontage)] <- mean(test_data$LotFrontage, na.rm = TRUE)
> test_data$GarageYrBlt[is.na(train_data$GarageYrBlt)] <- mean(test_data$GarageYrBlt, na.rm = TRUE)
Error in `$<-.data.frame`(`*tmp*`, "GarageYrBlt", value = c(1961, 1958,  :
replacement has 1460 rows, data has 1459
> test_data$GarageYrBlt[is.na(test_data$GarageYrBlt)] <- mean(test_data$GarageYrBlt, na.rm = TRUE)
> test_data$MasVnrType[is.na(test_data$MasVnrType)] <- Mode(test_data$MasVnrType)
> test_data$Electrical[is.na(test_data$Electrical)] <- Mode(test_data$Electrical)
> test_data$MasVnrArea[is.na(test_data$MasVnrArea)] <- mean(test_data$MasVnrArea, na.rm = TRUE)
> #Mode function
> test_data2 <- subset(test_data, select= selecteAtrr)
> View(test_data2)
> colSums(is.na(test_data2))
MSSubClass      MSZoning   LotFrontage       LotArea         Alley   LandContour
0             4             0             0             0             0
Neighborhood      BldgType    HouseStyle   OverallQual   OverallCond     YearBuilt
0             0             0             0             0             0
YearRemodAdd   Exterior1st   Exterior2nd    MasVnrArea     ExterQual    Foundation
0             1             1             0             0             0
BsmtQual  BsmtExposure  BsmtFinType1    BsmtFinSF1     BsmtUnfSF   TotalBsmtSF
0             0             0             1             1             1
HeatingQC    CentralAir    Electrical     X1stFlrSF     X2ndFlrSF     GrLivArea
0             0             0             0             0             0
BsmtFullBath      FullBath      HalfBath  BedroomAbvGr  KitchenAbvGr   KitchenQual
2             0             0             0             0             1
TotRmsAbvGrd    Functional    Fireplaces   FireplaceQu    GarageType   GarageYrBlt
0             2             0             0             0             0
GarageFinish    GarageCars    GarageArea    GarageQual    GarageCond    PavedDrive
0             1             1             0             0             0
WoodDeckSF   OpenPorchSF EnclosedPorch   ScreenPorch SaleCondition
0             0             0             0             0
> str(test_data2)
'data.frame':	1459 obs. of  53 variables:
$ MSSubClass   : Factor w/ 16 levels "20","30","40",..: 1 1 6 6 12 6 1 6 1 1 ...
$ MSZoning     : chr  "RH" "RL" "RL" "RL" ...
$ LotFrontage  : num  80 81 74 78 43 ...
$ LotArea      : int  11622 14267 13830 9978 5005 10000 7980 8402 10176 8400 ...
$ Alley        : Factor w/ 3 levels "Grvl","NoAC",..: 2 2 2 2 2 2 2 2 2 2 ...
$ LandContour  : Factor w/ 4 levels "Bnk","HLS","Low",..: 4 4 4 4 2 4 4 4 4 4 ...
$ Neighborhood : Factor w/ 25 levels "Blmngtn","Blueste",..: 13 13 9 9 22 9 9 9 9 13 ...
$ BldgType     : Factor w/ 5 levels "1Fam","2fmCon",..: 1 1 1 1 5 1 1 1 1 1 ...
$ HouseStyle   : Factor w/ 7 levels "1.5Fin","1.5Unf",..: 3 3 5 5 3 5 3 5 3 3 ...
$ OverallQual  : Factor w/ 10 levels "1","2","3","4",..: 5 6 5 6 8 6 6 6 7 4 ...
$ OverallCond  : Factor w/ 9 levels "1","2","3","4",..: 6 6 5 6 5 5 7 5 5 5 ...
$ YearBuilt    : int  1961 1958 1997 1998 1992 1993 1992 1998 1990 1970 ...
$ YearRemodAdd : int  1961 1958 1998 1998 1992 1994 2007 1998 1990 1970 ...
$ Exterior1st  : Factor w/ 13 levels "AsbShng","AsphShn",..: 11 12 11 11 7 7 7 11 7 9 ...
$ Exterior2nd  : Factor w/ 15 levels "AsbShng","AsphShn",..: 13 14 13 13 7 7 7 13 7 10 ...
$ MasVnrArea   : num  0 108 0 20 0 0 0 0 0 0 ...
$ ExterQual    : Factor w/ 4 levels "Ex","Fa","Gd",..: 4 4 4 4 3 4 4 4 4 4 ...
$ Foundation   : Factor w/ 6 levels "BrkTil","CBlock",..: 2 2 3 3 3 3 3 3 3 2 ...
$ BsmtQual     : Factor w/ 5 levels "Ex","Fa","Gd",..: 5 5 3 5 3 3 3 3 3 5 ...
$ BsmtExposure : Factor w/ 5 levels "Av","Gd","Mn",..: 4 4 4 4 4 4 4 4 2 4 ...
$ BsmtFinType1 : Factor w/ 7 levels "ALQ","BLQ","GLQ",..: 6 1 3 3 1 7 1 7 3 1 ...
$ BsmtFinSF1   : int  468 923 791 602 263 0 935 0 637 804 ...
$ BsmtUnfSF    : int  270 406 137 324 1017 763 233 789 663 0 ...
$ TotalBsmtSF  : int  882 1329 928 926 1280 763 1168 789 1300 882 ...
$ HeatingQC    : chr  "TA" "TA" "Gd" "Ex" ...
$ CentralAir   : chr  "Y" "Y" "Y" "Y" ...
$ Electrical   : chr  "SBrkr" "SBrkr" "SBrkr" "SBrkr" ...
$ X1stFlrSF    : int  896 1329 928 926 1280 763 1187 789 1341 882 ...
$ X2ndFlrSF    : int  0 0 701 678 0 892 0 676 0 0 ...
$ GrLivArea    : int  896 1329 1629 1604 1280 1655 1187 1465 1341 882 ...
$ BsmtFullBath : int  0 0 0 0 0 0 1 0 1 1 ...
$ FullBath     : int  1 1 2 2 2 2 2 2 1 1 ...
$ HalfBath     : int  0 1 1 1 0 1 0 1 1 0 ...
$ BedroomAbvGr : int  2 3 3 3 2 3 3 3 2 2 ...
$ KitchenAbvGr : int  1 1 1 1 1 1 1 1 1 1 ...
$ KitchenQual  : Factor w/ 4 levels "Ex","Fa","Gd",..: 4 3 4 3 3 4 4 4 3 4 ...
$ TotRmsAbvGrd : int  5 6 6 7 5 7 6 7 5 4 ...
$ Functional   : Factor w/ 7 levels "Maj1","Maj2",..: 7 7 7 7 7 7 7 7 7 7 ...
$ Fireplaces   : int  0 0 1 1 0 1 0 1 1 0 ...
$ FireplaceQu  : Factor w/ 6 levels "Ex","Fa","Gd",..: 4 4 6 3 4 6 4 3 5 4 ...
$ GarageType   : Factor w/ 7 levels "2Types","Attchd",..: 2 2 2 2 2 2 2 2 2 2 ...
$ GarageYrBlt  : num  1961 1958 1997 1998 1992 ...
$ GarageFinish : Factor w/ 4 levels "Fin","NoG","RFn",..: 4 4 1 1 3 1 1 1 4 1 ...
$ GarageCars   : int  1 1 2 2 2 2 2 2 2 2 ...
$ GarageArea   : int  730 312 482 470 506 440 420 393 506 525 ...
$ GarageQual   : Factor w/ 5 levels "Fa","Gd","NoG",..: 5 5 5 5 5 5 5 5 5 5 ...
$ GarageCond   : Factor w/ 6 levels "Ex","Fa","Gd",..: 6 6 6 6 6 6 6 6 6 6 ...
$ PavedDrive   : Factor w/ 3 levels "N","P","Y": 3 3 3 3 3 3 3 3 3 3 ...
$ WoodDeckSF   : int  140 393 212 360 0 157 483 0 192 240 ...
$ OpenPorchSF  : int  0 36 34 36 82 84 21 75 0 0 ...
$ EnclosedPorch: int  0 0 0 0 0 0 0 0 0 0 ...
$ ScreenPorch  : int  120 0 0 0 144 0 0 0 0 0 ...
$ SaleCondition: Factor w/ 6 levels "Abnorml","AdjLand",..: 5 5 5 5 5 5 5 5 5 5 ...
> test_data2$MSZoning <- as.factor(test_data2$MSZoning)
> test_data2$MSZoning[is.na(test_data2$MSZoning)] <- Mode(test_data2$MSZoning)
> test_data2$Exterior1st[is.na(test_data2$Exterior1st)] <- Mode(test_data2$Exterior1st)
> test_data2$Exterior2nd[is.na(test_data2$Exterior2nd)] <- Mode(test_data2$Exterior2nd)
> test_data2$BsmtFinSF1[is.na(test_data$BsmtFinSF1)] <- mean(test_data$BsmtFinSF1, na.rm = TRUE)
> test_data2$BsmtUnfSF[is.na(test_data2$BsmtUnfSF)] <- mean(test_data2$BsmtUnfSF, na.rm = TRUE)
> test_data2$TotalBsmtSF[is.na(test_data2$TotalBsmtSF)] <- mean(test_data2$TotalBsmtSF, na.rm = TRUE)
> test_data2$KitchenQual[is.na(test_data2$KitchenQual)] <- Mode(test_data2$KitchenQual)
> test_data2$BsmtFullBath[is.na(test_data2$BsmtFullBath)] <- Mode(test_data2$BsmtFullBath)
> test_data2$Functional[is.na(test_data2$Functional)] <- Mode(test_data2$Functional)
> test_data2$GarageCars[is.na(test_data2$GarageCars)] <- Mode(test_data2$GarageCars)
> test_data2$GarageArea[is.na(test_data2$GarageArea)] <- mean(test_data2$GarageArea, na.rm = TRUE)
> colSums(is.na(test_data2))
MSSubClass      MSZoning   LotFrontage       LotArea         Alley   LandContour
0             0             0             0             0             0
Neighborhood      BldgType    HouseStyle   OverallQual   OverallCond     YearBuilt
0             0             0             0             0             0
YearRemodAdd   Exterior1st   Exterior2nd    MasVnrArea     ExterQual    Foundation
0             0             0             0             0             0
BsmtQual  BsmtExposure  BsmtFinType1    BsmtFinSF1     BsmtUnfSF   TotalBsmtSF
0             0             0             0             0             0
HeatingQC    CentralAir    Electrical     X1stFlrSF     X2ndFlrSF     GrLivArea
0             0             0             0             0             0
BsmtFullBath      FullBath      HalfBath  BedroomAbvGr  KitchenAbvGr   KitchenQual
0             0             0             0             0             0
TotRmsAbvGrd    Functional    Fireplaces   FireplaceQu    GarageType   GarageYrBlt
0             0             0             0             0             0
GarageFinish    GarageCars    GarageArea    GarageQual    GarageCond    PavedDrive
0             0             0             0             0             0
WoodDeckSF   OpenPorchSF EnclosedPorch   ScreenPorch SaleCondition
0             0             0             0             0
> test_data2$BsmtUnfSF <- (test_data2$BsmtUnfSF)^(1/3)
> test_data2$BsmtFinSF1 <- log(test_data2$BsmtFinSF1)
> test_data2$LotArea[test_data2$LotArea>10.5] <- mean(test_data2$LotArea[-test_data2$LotArea > 10.5])
> hist(train_data2$MasVnrArea)
> train_data2$MasVnrArea[train_data2$MasVnrArea<2] <- mean(train_data2$MasVnrArea[-train_data2$MasVnrArea < 2])
> hist(train_data2$BsmtUnfSF)
> train_data2$BsmtUnfSF[train_data2$BsmtUnfSF<2] <- mean(train_data2$BsmtUnfSF[-train_data2$BsmtUnfSF < 2])
> train_data2$BsmtUnfSF[train_data2$BsmtUnfSF>13] <- mean(train_data2$BsmtUnfSF[-train_data2$BsmtUnfSF >13])
> hist(train_data2$BsmtFinSF1)
hist(train_data2$TotalBsmtSF)
train_data2$TotalBsmtSF[train_data2$TotalBsmtSF<2] <- mean(train_data2$TotalBsmtSF[-train_data2$TotalBsmtSF > 2500])
hist(train_data2$X1stFlrSF)
train_data2$X1stFlrSF[train_data2$X1stFlrSF>2500] <- mean(train_data2$X1stFlrSF[-train_data2$X1stFlrSF > 2500])
hist(train_data2$X2ndFlrSF)
train_data2$X2ndFlrSF[train_data2$X2ndFlrSF < 5] <- mean(train_data2$X2ndFlrSF[-train_data2$X2ndFlrSF <5])
train_data2$X2ndFlrSF[train_data2$X2ndFlrSF > 8] <- mean(train_data2$X2ndFlrSF[-train_data2$X2ndFlrSF >8])
hist(train_data2$X2ndFlrSF)
hist(train_data2$GrLivArea) #normal distributed
train_data2$GrLivArea[train_data2$GrLivArea > 3500] <- mean(train_data2$GrLivArea[-train_data2$GrLivArea >3500])
hist(train_data2$WoodDeckSF) #right skew
train_data2$WoodDeckSF[train_data2$WoodDeckSF < 3] <- mean(train_data2$WoodDeckSF[-train_data2$WoodDeckSF <3])
hist(train_data2$OpenPorchSF)
train_data2$OpenPorchSF[train_data2$OpenPorchSF < 2] <- mean(train_data2$OpenPorchSF[-train_data2$OpenPorchSF <2])
View(test_data2)
View(train_data2)
colSums(is.na(test_data2))
colSums(is.na(test_data))
test_data2$LotArea <- test_data$LotArea
train_data2$Sale_Price <- train_data$SalePrice
fit <- lm(Sale_Price~., data = train_data2)
View(train_data2)
train_data$LotFrontage[is.na(train_data$LotFrontage)] <- mean(train_data$LotFrontage, na.rm = TRUE)
View(train_data2)
sum(is.na(train_data2$LotFrontage))
colSums(is.na(train_data2))
train_data2$LotFrontage[is.na(train_data2$LotFrontage)] <- mean(train_data2$LotFrontage, na.rm = TRUE)
train_data2$GrLivArea[is.na(train_data2$GrLivArea)] <- mean(train_data2$GrLivArea, na.rm = TRUE)
train_data2$LotArea[is.na(train_data2$LotArea)] <- mean(train_data2$LotArea, na.rm = TRUE)
train_data2$BsmtUnfSF[is.na(train_data2$BsmtUnfSF)] <- mean(train_data2$BsmtUnfSF, na.rm = TRUE)
train_data2$X1stFlrSF[is.na(train_data2$X1stFlrSF)] <- mean(train_data2$X1stFlrSF, na.rm = TRUE)
colSums(is.na(train_data2))
train_data2$TotalBsmtSF[is.na(train_data2$TotalBsmtSF)] <- mean(train_data2$TotalBsmtSF, na.rm = TRUE)
fit <- lm(Sale_Price~., data = train_data2)
train_data2[is.infinite()] <- 0
train_data2[is.infinite(train_data2)] <- 0
colSums(is.infinite(train_data2))
str(train_data2)
sum(is.infinite(train_data2$LotArea))
sum(is.infinite(train_data2$MasVnrArea))
sum(is.infinite(train_data2$BsmtFinSF1))
train_data2$BsmtFinSF1[is.infinite(train_data2$BsmtFinSF1)] <- mean(train_data2$BsmtFinSF1, infinite.rm = TRUE)
sum(is.infinite(train_data2$BsmtUnfSF))
sum(is.infinite(train_data2$X2ndFlrSF))
sum(is.infinite(train_data2$WoodDeckSF))
sum(is.infinite(train_data2$OpenPorchSF))
fit <- lm(Sale_Price~., data = train_data2)
colSums(is.na())
colSums(is.na(train_data2))
colSums(is.nan(train_data2))
View(train_data2)
sum(is.infinite(train_data2$BsmtFinSF1))
train_data2$BsmtFinSF1 <- NULL
test_data2$BsmtFinSF1 <- NULL
fit <- lm(Sale_Price~., data = train_data2)
predict(fit, newdata = test_data2a)
predict(fit, newdata = test_data2)
View(test_data2)
str(test_data2)
